Steps to run this application:
1. Application can be run in 2 ways:
    a. to fetch the company URLs as input one after the other. 
    b. to read a file containing a list of URLs. 
  To read URLs from a file, pass 'file' '<FILE NAME>' to 'GetCompanyDataMain.py' file. when running it from spyder, 
  click on run menu -> select 'run conguration perfile' -> and set 'file <FILE NAME>'
  from command line, you can run it as 
      python3 GetCompanyDataMain.py file <FILE NAME>
  
  If you run without the file and <FILE NAME> options, the code will ask you to enter the company URL.
  To exit the loop enter 'exit'
  
Steps to follow to get company data:
1. Go to screener.in and filter the companies with good record. Some of the queries I used are:

    Return on capital employed > 12% AND
    Return on equity > 12% AND
    Market Capitalization > 500 AND
    Debt To Profit <6 


    sales > 250 AND
    Interest Coverage > 4 AND
    Return on equity > 15 AND
    Debt To Profit <7 AND
    EPS last year > EPS preceding year                
                
2.  Screener lists the companies which match the criterian. select the company names one by one and enter that in moneycontrol.com
3. Take the company url from money control and feed it to 'GetCompanyDataMain.py' file.
                   POSTGRESQL SETUP: 
                  ---------------------
                  
                 
* Steps to set up DB:
1. install postgreSQL with pgAdmin
2. create a database
    create DATABASE ShareScore;

3. Install psycopg2 module as follows:
   conda install psycopg2
   
4. Create basic table:


                SETTING UP CHROME DRIVER
1. Chrome driver needs to be downloaded from https://chromedriver.chromium.org/downloads. The version of chrome driver should be same as the chrome installed on the system.
2. Currently, the path for chrome driver is hard coaded in Navigator.py. and is used by selenium module.
3. Copy the downloaded chrome driver into /Users/sharvarinagesh/Technical/Python/webscrap
4. TODO: Make this path configurable

================== BASIC DATA TABLE======================

CREATE TABLE public."sharebasic"
(
	id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "name" character varying(250) COLLATE pg_catalog."default" NOT NULL,
	"avg_score" numeric,
    "high_score" numeric,
    "eps_cagr" numeric,
	"netprofit_cagr" numeric,
	"company_overview" text COLLATE pg_catalog."default",
    "comments" text COLLATE pg_catalog."default",
    "price" numeric,
    "low52" numeric,
    "high52" numeric,
    "sector" character varying(100) COLLATE pg_catalog."default",    
    "market_cap" character varying(200) COLLATE pg_catalog."default",
    "pe" numeric,
    "book_value" numeric,
    "dividend" numeric,
    "industry_pe" numeric,
    "eps" numeric,
    "pc" numeric,
    "price_to_book" numeric,
    "dividend_yield" numeric,
    "face_value" numeric,
	"url" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "sharebasic_pkey" PRIMARY KEY ("name", id)
)

TABLESPACE pg_default;

ALTER TABLE public."ShareBasic"
    OWNER to postgres;
COMMENT ON TABLE public."ShareBasic"
    IS 'To store the basic data of shares';
    
    
    
  ================== FINANCIAL DATA TABLE======================  

CREATE TABLE public."financialdata"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "company_name" character varying(250) COLLATE pg_catalog."default" NOT NULL,
    "year" character varying(20),
    "share_capital" numeric,
    "reserves" numeric,
    "total_shareholders_fund" numeric,
    "total_noncurrent_liability" numeric,
    "total_current_liabilities" numeric,
    "total_capital_and_liabilities" numeric,
    "total_revenue" numeric,
    "total_expenses" numeric,
    "profit_loss_before_tax" numeric,
    "current_tax" numeric,    
    "profit_loss_for_the_period" numeric,
    "basic_eps" numeric,
    "equity_share_dividend" numeric,
    "pbdit_margin" numeric,
    "net_profit_margin" numeric,
    "roe" numeric,
    "rotc" numeric,
    "debt_to_equity" numeric,
    "current_ratio" numeric,
    "dividend_payout_ratio" numeric,
    "earnings_retention_ratio" numeric,
    "score" numeric,
    "score_summary" text COLLATE pg_catalog."default",
    "created_at" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "financialdata_pkey" PRIMARY KEY ("company_name", id)
)
============================================================
5. Create Financial Data table :
6. create a user:
Reference: https://tableplus.com/blog/2018/04/postgresql-how-to-grant-access-to-users.html
CREATE USER <userid> WITH PASSWORD '<password>';

CREATE USER shareUser with password 'Share123';

7. Grant permissio to the user

CREATE ROLE share_user with password 'share123';

GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public to share_user;

GRANT CONNECT ON DATABASE sharescore TO share_user;

ALTER ROLE "share_user" WITH LOGIN;

BASIC DATA SCRAPPED:
BasicScrapper.py scrapps the basic data about the company and a sample looks like this:
{'name': 'Bosch Ltd.', 'url': 'https://www.moneycontrol.com/india/stockpricequote/auto-ancillaries/bosch/B05', 'price': 9916.4, '52low': 7874.0, '52high': 18133.2, 'sector': 'Auto Ancillaries', 'Company Overview': 'Bosch Ltd is Indias largest auto component manufacturer.The company`s activities can be classified under the following divisions Automotive Technology i.e. Diesel and Gasoline Fuel Injection Systems, Blaupunkt Car Multimedia Systems, Auto Electricals and Accessories, Starters and Motors, Energy and Body Systems;Industrial Technology i.e.Packaging Machines, & Special Purpose Machines and Consumer Goods and Building Technology i.e.Power Tools, Security Systems,etc.The company also in the business activities of Automotive Product.', 'Market Cap (Rs Cr.)': 29214.78, 'P/E': 29.83, 'Book Value (Rs)': 3091.44, 'Dividend (%)': 1050.0, 'Industry P/E': 15.69, 'EPS (TTM)': 332.42, 'P/C': 21.09, 'Price/Book': 3.2, 'Dividend Yield.(%)': 1.06, 'Face Value (RS)': 10.0}


